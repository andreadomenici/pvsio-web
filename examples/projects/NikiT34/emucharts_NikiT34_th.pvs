% ---------------------------------------------------------------
%  Theory: emucharts_NikiT34_th
%  Author: xxxx
%          xxxx
%          xxx
% ---------------------------------------------------------------

emucharts_NikiT34_th: THEORY
 BEGIN

  %-- machine states
  MachineState: TYPE = { ask_resume, check_syringe, info, infusing, infusing_disp_syringe, infusion_complete, new_regime, off, on, preloading, ready, set_rate }

  %-- emuchart state
  State: TYPE = [#
    current_state: MachineState,
    previous_state: MachineState,
    botline: string,
    disp_message_1: string,
    disp_message_2: string,
    disp_numeric: real,
    display: string,
    end_program_reached: bool,
    rate: real,
    syringe_loaded: bool,
    time_to_load: int,
    timetick: real,
    topline: string,
    volume: real
  #]

  %-- initial state
  init(x: real): State = (#
    current_state := off,
    previous_state := off,
    botline := "",
    disp_message_1 := "",
    disp_message_2 := "",
    disp_numeric := 0,
    display := "",
    end_program_reached := true,
    rate := 0.5,
    syringe_loaded := false,
    time_to_load := 2,
    timetick := 1,
    topline := "",
    volume := 12
  #)
  %-- utility functions
  enter_into(ms: MachineState)(st: State): State = st WITH [ current_state := ms ]
  leave_state(ms: MachineState)(st: State): State = st WITH [ previous_state := ms ]

  %-- transition functions
  per_tick(st: State): bool = ((current_state(st) = preloading) AND (NOT syringe_loaded(st) AND time_to_load(st) = 0)) OR ((current_state(st) = preloading) AND (NOT syringe_loaded(st) AND time_to_load(st) > 0)) OR ((current_state(st) = preloading) AND (syringe_loaded(st))) OR ((current_state(st) = infusing) AND (volume(st) = 0)) OR ((current_state(st) = infusing_disp_syringe) AND (volume(st) = 0)) OR ((current_state(st) = infusing_disp_syringe) AND (volume(st) > 0)) OR ((current_state(st) = infusing) AND (volume(st) > 0))
  tick(st: (per_tick)): State =
    COND
    (current_state(st) = preloading) AND (NOT syringe_loaded(st) AND time_to_load(st) = 0)
     -> LET new_st = leave_state(preloading)(st),
            new_st = new_st WITH [ syringe_loaded := true ]
         IN enter_into(preloading)(new_st),
    (current_state(st) = preloading) AND (NOT syringe_loaded(st) AND time_to_load(st) > 0)
     -> LET new_st = leave_state(preloading)(st),
            new_st = new_st WITH [ time_to_load := time_to_load(st) - 1 ]
         IN enter_into(preloading)(new_st),
    (current_state(st) = preloading) AND (syringe_loaded(st))
     -> LET new_st = leave_state(preloading)(st),
            new_st = new_st WITH [ display := "10ml BD Plastipak" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ botline := "Press YES" ]
         IN enter_into(check_syringe)(new_st),
    (current_state(st) = infusing) AND (volume(st) = 0)
     -> LET new_st = leave_state(infusing)(st),
            new_st = new_st WITH [ display := "Infusion Complete!" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ botline := "Press OFF" ]
         IN enter_into(infusion_complete)(new_st),
    (current_state(st) = infusing_disp_syringe) AND (volume(st) = 0)
     -> LET new_st = leave_state(infusing_disp_syringe)(st),
            new_st = new_st WITH [ display := "Infusion Complete!" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ botline := "Press OFF" ]
         IN enter_into(infusion_complete)(new_st),
    (current_state(st) = infusing_disp_syringe) AND (volume(st) > 0)
     -> LET new_st = leave_state(infusing_disp_syringe)(st),
            new_st = new_st WITH [ volume := volume(st) - ( rate(st) * timetick(st) ) ],
            new_st = new_st WITH [ botline := "<<<<< Pump Delivering" ]
         IN enter_into(infusing)(new_st),
    (current_state(st) = infusing) AND (volume(st) > 0)
     -> LET new_st = leave_state(infusing)(st),
            new_st = new_st WITH [ volume := volume(st) - ( rate(st) * timetick(st) ) ],
            new_st = new_st WITH [ botline := "10ml BD Plastipak" ]
         IN enter_into(infusing_disp_syringe)(new_st),
    ELSE -> st
    ENDCOND

  per_click_down(st: State): bool = ((current_state(st) = set_rate) AND (disp_numeric(st) = 0)) OR ((current_state(st) = set_rate) AND (disp_numeric(st) > 0 AND disp_numeric(st) <= 100)) OR ((current_state(st) = set_rate) AND (disp_numeric(st) > 100 AND disp_numeric(st) <= 1000))
  click_down(st: (per_click_down)): State =
    COND
    (current_state(st) = set_rate) AND (disp_numeric(st) = 0)
     -> LET new_st = leave_state(set_rate)(st),
            new_st = new_st WITH [ disp_numeric := 0 ]
         IN enter_into(set_rate)(new_st),
    (current_state(st) = set_rate) AND (disp_numeric(st) > 0 AND disp_numeric(st) <= 100)
     -> LET new_st = leave_state(set_rate)(st),
            new_st = new_st WITH [ disp_numeric := disp_numeric(st) - 0.1 ]
         IN enter_into(set_rate)(new_st),
    (current_state(st) = set_rate) AND (disp_numeric(st) > 100 AND disp_numeric(st) <= 1000)
     -> LET new_st = leave_state(set_rate)(st),
            new_st = new_st WITH [ disp_numeric := disp_numeric(st) - 1 ]
         IN enter_into(set_rate)(new_st),
    ELSE -> st
    ENDCOND

  per_click_info(st: State): bool = ((current_state(st) = on))
  click_info(st: (per_click_info)): State =
    COND
    (current_state(st) = on)
     -> LET new_st = leave_state(on)(st),
            new_st = new_st WITH [ display := "Battery Level: 50%" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ botline := "Press YES" ]
         IN enter_into(info)(new_st),
    ELSE -> st
    ENDCOND

  per_click_no(st: State): bool = ((current_state(st) = preloading)) OR ((current_state(st) = ask_resume)) OR ((current_state(st) = ready))
  click_no(st: (per_click_no)): State =
    COND
    (current_state(st) = preloading)
     -> LET new_st = leave_state(preloading)(st),
            new_st = new_st WITH [ display := "Ready!" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ botline := "Press YES" ]
         IN enter_into(on)(new_st),
    (current_state(st) = ask_resume)
     -> LET new_st = leave_state(ask_resume)(st),
            new_st = new_st WITH [ topline := "Volume  12.0 ml" ],
            new_st = new_st WITH [ disp_message_1 := "Duration 24:00" ],
            new_st = new_st WITH [ disp_message_2 := "Rate     0.50ml/h" ],
            new_st = new_st WITH [ botline := "Confirm Press YES" ],
            new_st = new_st WITH [ display := "" ]
         IN enter_into(new_regime)(new_st),
    (current_state(st) = ready)
     -> LET new_st = leave_state(ready)(st),
            new_st = new_st WITH [ topline := "Volume  12.0 ml" ],
            new_st = new_st WITH [ disp_message_1 := "Duration 24:00" ],
            new_st = new_st WITH [ disp_message_2 := "Rate     0.50ml/h" ],
            new_st = new_st WITH [ botline := "Confirm, Press YES" ],
            new_st = new_st WITH [ display := "" ]
         IN enter_into(new_regime)(new_st),
    ELSE -> st
    ENDCOND

  per_click_on_off(st: State): bool = ((current_state(st) = infusion_complete)) OR ((current_state(st) = on)) OR ((current_state(st) = off))
  click_on_off(st: (per_click_on_off)): State =
    COND
    (current_state(st) = infusion_complete)
     -> LET new_st = leave_state(infusion_complete)(st)
         IN enter_into(off)(new_st),
    (current_state(st) = on)
     -> LET new_st = leave_state(on)(st)
         IN enter_into(off)(new_st),
    (current_state(st) = off)
     -> LET new_st = leave_state(off)(st),
            new_st = new_st WITH [ display := "" ],
            new_st = new_st WITH [ topline := "Event No. : 2635" ],
            new_st = new_st WITH [ disp_message_1 := "04.03.2005 17:08" ],
            new_st = new_st WITH [ disp_message_2 := "Switched ON" ],
            new_st = new_st WITH [ botline := "Press INFO - Details" ]
         IN enter_into(on)(new_st),
    ELSE -> st
    ENDCOND

  per_click_up(st: State): bool = ((current_state(st) = set_rate) AND (disp_numeric(st) < 100)) OR ((current_state(st) = set_rate) AND (disp_numeric(st) = 1000)) OR ((current_state(st) = set_rate) AND (disp_numeric(st) >= 100 AND disp_numeric(st) < 1000))
  click_up(st: (per_click_up)): State =
    COND
    (current_state(st) = set_rate) AND (disp_numeric(st) < 100)
     -> LET new_st = leave_state(set_rate)(st),
            new_st = new_st WITH [ disp_numeric := disp_numeric(st) + 0.1 ]
         IN enter_into(set_rate)(new_st),
    (current_state(st) = set_rate) AND (disp_numeric(st) = 1000)
     -> LET new_st = leave_state(set_rate)(st),
            new_st = new_st WITH [ disp_numeric := 1000 ]
         IN enter_into(set_rate)(new_st),
    (current_state(st) = set_rate) AND (disp_numeric(st) >= 100 AND disp_numeric(st) < 1000)
     -> LET new_st = leave_state(set_rate)(st),
            new_st = new_st WITH [ disp_numeric := disp_numeric(st) + 1 ]
         IN enter_into(set_rate)(new_st),
    ELSE -> st
    ENDCOND

  per_click_yes(st: State): bool = ((current_state(st) = check_syringe) AND (NOT end_program_reached(st))) OR ((current_state(st) = check_syringe) AND (end_program_reached(st))) OR ((current_state(st) = on)) OR ((current_state(st) = info)) OR ((current_state(st) = new_regime)) OR ((current_state(st) = ready))
  click_yes(st: (per_click_yes)): State =
    COND
    (current_state(st) = check_syringe) AND (NOT end_program_reached(st))
     -> LET new_st = leave_state(check_syringe)(st),
            new_st = new_st WITH [ disp_message_1 := "Press YES to Resume" ],
            new_st = new_st WITH [ disp_message_2 := "NO for New Program" ],
            new_st = new_st WITH [ display := "" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ botline := "" ]
         IN enter_into(ask_resume)(new_st),
    (current_state(st) = check_syringe) AND (end_program_reached(st))
     -> LET new_st = leave_state(check_syringe)(st),
            new_st = new_st WITH [ topline := "Volume  12.0 ml" ],
            new_st = new_st WITH [ disp_message_1 := "Duration 24:00" ],
            new_st = new_st WITH [ disp_message_2 := "Rate     0.50ml/h" ],
            new_st = new_st WITH [ botline := "Confirm Press YES" ],
            new_st = new_st WITH [ display := "" ]
         IN enter_into(new_regime)(new_st),
    (current_state(st) = on)
     -> LET new_st = leave_state(on)(st),
            new_st = new_st WITH [ display := "Pre-Loading" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ botline := "Use NO to Interrupt..." ],
            new_st = new_st WITH [ time_to_load := 1 ]
         IN enter_into(preloading)(new_st),
    (current_state(st) = info)
     -> LET new_st = leave_state(info)(st),
            new_st = new_st WITH [ display := "Ready!" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ botline := "Press YES" ]
         IN enter_into(on)(new_st),
    (current_state(st) = new_regime)
     -> LET new_st = leave_state(new_regime)(st),
            new_st = new_st WITH [ display := "Start infusion?" ],
            new_st = new_st WITH [ topline := "" ],
            new_st = new_st WITH [ botline := "" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ],
            new_st = new_st WITH [ end_program_reached := false ]
         IN enter_into(ready)(new_st),
    (current_state(st) = ready)
     -> LET new_st = leave_state(ready)(st),
            new_st = new_st WITH [ topline := "Time Remaining: 23:57" ],
            new_st = new_st WITH [ display := "Rate 0.5ml/hr" ],
            new_st = new_st WITH [ botline := "<<<<< Pump Delivering" ],
            new_st = new_st WITH [ disp_message_1 := "" ],
            new_st = new_st WITH [ disp_message_2 := "" ]
         IN enter_into(infusing)(new_st),
    ELSE -> st
    ENDCOND

 END emucharts_NikiT34_th

% ---------------------------------------------------------------
%  PVS theory generated using PVSio-web PVSPrinter ver 0.1
%  Tool freely available at http://www.pvsioweb.org
% ---------------------------------------------------------------
